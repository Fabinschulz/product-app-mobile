trigger:
  - master

pool:
  vmImage: "ubuntu-latest"

steps:
  - task: CmdLine@2
    inputs:
      script: 'dotnet workload install maui'

  - task: DotNetCoreCLI@2
    displayName: "Build ProductAppMAUI"
    inputs:
      command: build
      projects: "**/ProductAppMAUI/ProductAppMAUI.csproj"
      arguments: "-c Release"

  - task: DotNetCoreCLI@2
    displayName: "Build ProductAppMAUI.Android"
    inputs:
      command: build
      projects: "**/ProductAppMAUI/ProductAppMAUI.Android.csproj"
      arguments: "--configuration $(BuildConfiguration)"
    continueOnError: true

  - task: CopyFiles@2
    displayName: 'Copy Files to: $(Build.ArtifactStagingDirectory)/ProductAppMAUI'
    inputs:
        SourceFolder: '$(Build.SourcesDirectory)/ProductAppMAUI/bin/$(BuildConfiguration)/net6.0-android'
        Contents: '**'
        TargetFolder: '$(Build.ArtifactStagingDirectory)/ProductAppMAUI'
        CleanTargetFolder: true
        OverWrite: true
        flattenFolders: true
    condition: succeededOrFailed()

  - task: PublishBuildArtifacts@1
    displayName: 'Publish Artifacts'
    inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)/ProductAppMAUI'
        ArtifactName: 'ProductAppMAUI'
        publishLocation: 'Container'
    condition: succeededOrFailed()

  - task: PublishPipelineArtifact@1
    displayName: 'Publish Pipeline Artifact: ProductAppMAUI'
    inputs:
      targetPath: '$(Build.SourcesDirectory)/ProductAppMAUI/bin/$(BuildConfiguration)/net6.0-android/ProductAppMAUI.dll'
      publishLocation: 'pipeline'
      artifactName: 'ProductAppMAUI'
    condition: succeededOrFailed()


